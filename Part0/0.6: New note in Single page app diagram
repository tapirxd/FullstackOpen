sequenceDiagram
    participant browser
    participant server
    
    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/spa
    activate server
    server-->>browser: HTML document
    deactivate server
    
    browser->>server: GET GET https://studies.cs.helsinki.fi/exampleapp/spa/main.css
    activate server
    server-->>browser: the css file
    deactivate server
    
    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/spa/main.js
    activate server
    server-->>browser: the JavaScript file
    deactivate server
    
    Note right of browser: The browser starts executing the JavaScript code that fetches the JSON from the server
    
    browser->>server: GET https://studies.cs.helsinki.fi/exampleapp/spa/data.json

    activate server
    server-->>browser: [{ "content": "HTML is easy", "date": "2023-1-1" }, ... ]
    deactivate server    

    Note right of browser: The browser executes the callback function that renders the notes 
    Note right of browser: The browser adds HTML elements for displaying the notes through the DOM-API 

    activate server
    browser->>server: POST REQUEST:  "note" 
    deactivate server    
    Note right of browser: The content-type is JSON without it the server wouldn't know how to parse the data 

    Note left of server: The server calls e.preventDefault() which prevents the default action when a form is processed which would be to cause a new GET request
    Note left of server: Then the event handler creates a new note and adds it to the notes list with notes.push(note) which rerenders the list and sends the new note to the server
    activate server
    server-->>browser: POST: note
    deactivate server 
